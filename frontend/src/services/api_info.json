{
  "openapi": "3.1.0",
  "info": {
    "title": "api",
    "description": "",
    "license": {
      "name": ""
    },
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/checkouts": {
      "get": {
        "tags": ["checkouts"],
        "summary": "List all currently checked out items",
        "description": "Get a list of all items that are currently checked out",
        "operationId": "show_checked_out_list",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/api/v1/health": {
      "get": {
        "tags": ["health"],
        "summary": "Check if the API server is running",
        "operationId": "health_check",
        "responses": {
          "200": {
            "description": "API server is healthy"
          }
        }
      }
    },
    "/api/v1/health/db": {
      "get": {
        "tags": ["health"],
        "summary": "Check if the database connection is healthy",
        "operationId": "health_check_db",
        "responses": {
          "200": {
            "description": "Database connection is healthy"
          },
          "500": {
            "description": "Database connection failed"
          }
        }
      }
    },
    "/api/v1/items": {
      "get": {
        "tags": ["items"],
        "summary": "List items",
        "description": "Get a paginated list of all items",
        "operationId": "list_items",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of items to skip",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      },
      "post": {
        "tags": ["items"],
        "summary": "Create a new item",
        "description": "Create a new item with the provided details. The item category (general, book, or laptop) determines the required fields.",
        "operationId": "create_item",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Item created successfully"
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/api/v1/items/{item_id}": {
      "get": {
        "tags": ["items"],
        "summary": "Get item by ID",
        "description": "Get details of a specific item by its ID",
        "operationId": "get_item",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Item not found"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      },
      "put": {
        "tags": ["items"],
        "summary": "Update item",
        "description": "Update an existing item with new details",
        "operationId": "update_item",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Item updated successfully"
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Item not found"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      },
      "delete": {
        "tags": ["items"],
        "summary": "Delete item",
        "description": "Delete an existing item",
        "operationId": "delete_item",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Item not found"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/api/v1/items/{item_id}/checkout-history": {
      "get": {
        "tags": ["checkouts"],
        "summary": "Get item checkout history",
        "description": "Get the complete checkout history for a specific item",
        "operationId": "checkout_history",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Item not found"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/api/v1/items/{item_id}/checkouts": {
      "post": {
        "tags": ["checkouts"],
        "summary": "Checkout an item",
        "description": "Create a new checkout record for an item",
        "operationId": "checkout_book",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "description": "Item ID to checkout",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Item checked out successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Item not found"
          },
          "409": {
            "description": "Item already checked out"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/api/v1/items/{item_id}/checkouts/{checkout_id}/returned": {
      "put": {
        "tags": ["checkouts"],
        "summary": "Return a checked out item",
        "description": "Mark a checked out item as returned",
        "operationId": "return_book",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "description": "Item ID to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "checkout_id",
            "in": "path",
            "description": "Checkout record ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item returned successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Item or checkout record not found"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": ["users"],
        "summary": "Get a list of all users",
        "description": "Retrieve a list of all registered users",
        "operationId": "list_users",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      },
      "post": {
        "tags": ["users"],
        "summary": "Register a new user (Admin only)",
        "description": "Create a new user account. Only administrators can perform this operation.",
        "operationId": "register_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/api/v1/users/me": {
      "get": {
        "tags": ["users"],
        "summary": "Get current user information",
        "description": "Retrieve the authenticated user's profile information",
        "operationId": "get_current_user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/api/v1/users/me/checkouts": {
      "get": {
        "tags": ["users"],
        "summary": "Get user's active checkouts",
        "description": "Retrieve a list of items currently checked out by the authenticated user",
        "operationId": "get_checkouts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/api/v1/users/me/password": {
      "put": {
        "tags": ["users"],
        "summary": "Change user password",
        "description": "Update the authenticated user's password",
        "operationId": "change_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password updated successfully"
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Invalid current password"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/api/v1/users/{user_id}": {
      "delete": {
        "tags": ["users"],
        "summary": "Delete a user account (Admin only)",
        "description": "Delete an existing user account. Only administrators can perform this operation.",
        "operationId": "delete_user",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/api/v1/users/{user_id}/role": {
      "put": {
        "tags": ["users"],
        "summary": "Change user role (Admin only)",
        "description": "Update the role of an existing user. Only administrators can perform this operation.",
        "operationId": "change_role",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Role updated successfully"
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden - Admin access required"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "Login to get access token",
        "description": "Authenticate with email and password to get an access token",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessTokenResponse": {
        "type": "object",
        "required": ["userId", "accessToken"],
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "userId": {
            "$ref": "#/components/schemas/UserId"
          }
        }
      },
      "BookResponse": {
        "type": "object",
        "required": ["id", "name", "author", "isbn", "description"],
        "properties": {
          "author": {
            "type": "string"
          },
          "checkout": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ItemCheckoutResponse"
              }
            ]
          },
          "description": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/ItemId"
          },
          "isbn": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CheckoutId": {
        "type": "string"
      },
      "CheckoutResponse": {
        "type": "object",
        "required": ["id", "checkedOutBy", "checkedOutAt", "returnedAt", "itemId"],
        "properties": {
          "checkedOutAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-04-10T13:15:00Z"
          },
          "checkedOutBy": {
            "$ref": "#/components/schemas/UserId"
          },
          "id": {
            "$ref": "#/components/schemas/CheckoutId"
          },
          "itemId": {
            "$ref": "#/components/schemas/ItemId"
          },
          "returnedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CheckoutUser": {
        "type": "object",
        "required": ["id", "name"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UserId"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CheckoutsResponse": {
        "type": "object",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckoutResponse"
            }
          }
        }
      },
      "CreateItemRequest": {
        "oneOf": [
          {
            "type": "object",
            "required": ["name", "description", "category"],
            "properties": {
              "category": {
                "type": "string",
                "enum": ["general"]
              },
              "description": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "required": ["name", "author", "isbn", "description", "category"],
            "properties": {
              "author": {
                "type": "string"
              },
              "category": {
                "type": "string",
                "enum": ["book"]
              },
              "description": {
                "type": "string"
              },
              "isbn": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "required": ["name", "mac_address", "description", "category"],
            "properties": {
              "category": {
                "type": "string",
                "enum": ["laptop"]
              },
              "description": {
                "type": "string"
              },
              "mac_address": {
                "type": "string",
                "example": "00:00:00:00:00:00"
              },
              "name": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CreateUserRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "GeneralItemResponse": {
        "type": "object",
        "required": ["id", "name", "description"],
        "properties": {
          "checkout": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ItemCheckoutResponse"
              }
            ]
          },
          "description": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/ItemId"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ItemCategory": {
        "type": "string",
        "enum": ["general", "book", "laptop"]
      },
      "ItemCheckoutResponse": {
        "type": "object",
        "required": ["id", "checkedOutBy", "checkedOutAt"],
        "properties": {
          "checkedOutAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-04-10T13:15:00Z"
          },
          "checkedOutBy": {
            "$ref": "#/components/schemas/CheckoutUser"
          },
          "id": {
            "$ref": "#/components/schemas/CheckoutId"
          }
        }
      },
      "ItemId": {
        "type": "string"
      },
      "ItemResponse": {
        "oneOf": [
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralItemResponse"
              },
              {
                "type": "object",
                "required": ["category"],
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": ["general"]
                  }
                }
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookResponse"
              },
              {
                "type": "object",
                "required": ["category"],
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": ["book"]
                  }
                }
              }
            ]
          },
          {
            "allOf": [
              {
                "$ref": "#/components/schemas/LaptopResponse"
              },
              {
                "type": "object",
                "required": ["category"],
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": ["laptop"]
                  }
                }
              }
            ]
          }
        ]
      },
      "LaptopResponse": {
        "type": "object",
        "required": ["id", "name", "macAddress", "description"],
        "properties": {
          "checkout": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ItemCheckoutResponse"
              }
            ]
          },
          "description": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/ItemId"
          },
          "macAddress": {
            "type": "string",
            "example": "00:00:00:00:00:00"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ListQuery": {
        "type": "object",
        "properties": {
          "category": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ItemCategory"
              }
            ]
          },
          "limit": {
            "type": "integer",
            "format": "int64"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "PaginatedItemResponse": {
        "type": "object",
        "required": ["total", "limit", "offset", "items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemResponse"
            }
          },
          "limit": {
            "type": "integer",
            "format": "int64"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RoleName": {
        "type": "string",
        "enum": ["Admin", "User"]
      },
      "UpdateItemRequest": {
        "oneOf": [
          {
            "type": "object",
            "required": ["name", "description", "category"],
            "properties": {
              "category": {
                "type": "string",
                "enum": ["general"]
              },
              "description": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "required": ["name", "author", "isbn", "description", "category"],
            "properties": {
              "author": {
                "type": "string"
              },
              "category": {
                "type": "string",
                "enum": ["book"]
              },
              "description": {
                "type": "string"
              },
              "isbn": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "required": ["name", "mac_address", "description", "category"],
            "properties": {
              "category": {
                "type": "string",
                "enum": ["laptop"]
              },
              "description": {
                "type": "string"
              },
              "mac_address": {
                "type": "string",
                "example": "00:00:00:00:00:00"
              },
              "name": {
                "type": "string"
              }
            }
          }
        ]
      },
      "UpdateUserPasswordRequest": {
        "type": "object",
        "required": ["currentPassword", "newPassword"],
        "properties": {
          "currentPassword": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "UpdateUserRoleRequest": {
        "type": "object",
        "required": ["role"],
        "properties": {
          "role": {
            "$ref": "#/components/schemas/RoleName"
          }
        }
      },
      "UserId": {
        "type": "string"
      },
      "UserResponse": {
        "type": "object",
        "required": ["id", "name", "email", "role"],
        "properties": {
          "email": {
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/UserId"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/RoleName"
          }
        }
      },
      "UsersResponse": {
        "type": "object",
        "required": ["items"],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "health",
      "description": "Health check endpoints"
    },
    {
      "name": "auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "checkouts",
      "description": "Item checkout management endpoints"
    },
    {
      "name": "items",
      "description": "Item management endpoints"
    },
    {
      "name": "users",
      "description": "User management endpoints"
    }
  ]
}
